import React, { useState, useMemo } from 'react';
import { ChevronDown, Gift, IndianRupee, Users, Building, GraduationCap, Globe, Award, Sparkles, Sun, Star } from 'lucide-react';

// --- Mock Initial Data ---
const initialDonations = [
    { id: 1, name: 'Ravi Sharma', bitsId: '2000A7PS007P', role: 'VP of Engineering, Google', location: 'Mountain View, USA', amount: 250000, region: 'International', department: 'CS', cause: 'Technology & Labs', memory: 'Late night project sessions at the IPC!' },
    { id: 2, name: 'Priya Singh', bitsId: '2000B3A3123P', role: 'Founder, Ather Energy', location: 'Bengaluru, India', amount: 200000, region: 'South', department: 'EEE', cause: 'Student Scholarships', memory: 'Winning the dance competition at Oasis \'98.' },
    { id: 3, name: 'Amit Patel', bitsId: '2000A1PS234P', role: 'Director of Operations, Tata Motors', location: 'Pune, India', amount: 150000, region: 'West', department: 'Mech', cause: 'Campus Infrastructure', memory: 'Those unforgettable trips to Sharma\'s.' },
    { id: 4, name: 'Sunita Reddy', bitsId: '2000A4PS456P', role: 'Lead Scientist, Dr. Reddy\'s Labs', location: 'Hyderabad, India', amount: 175000, region: 'South', department: 'Chem', cause: 'Faculty Development', memory: '' },
    { id: 5, name: 'Vikram Kumar', bitsId: '2000A7PS010P', role: 'Principal SDE, Amazon', location: 'Seattle, USA', amount: 225000, region: 'International', department: 'CS', cause: 'Technology & Labs', memory: 'Remember the LAN gaming nights? Good times.' },
];

const causes = {
    'Student Scholarships': { goal: 500000, icon: GraduationCap },
    'Campus Infrastructure': { goal: 750000, icon: Building },
    'Technology & Labs': { goal: 600000, icon: Globe },
    'Faculty Development': { goal: 400000, icon: Award },
    'Student Life & Activities': { goal: 300000, icon: Sparkles },
};

const donationTiers = [
    { name: 'BITS Spark', amount: 5000, icon: Sparkles },
    { name: 'BITS Beacon', amount: 10000, icon: Sun },
    { name: 'BITS Luminary', amount: 25000, icon: Star },
];

// --- Helper Components ---
const Card = ({ children, className = '' }) => (
    <div className={`bg-[#fdf6e3] rounded-lg border border-[#d2b48c] shadow-lg p-6 ${className}`}>
        {children}
    </div>
);

const LeaderboardItem = ({ rank, name, amount, icon }) => (
    <li className="flex items-center justify-between py-3 border-b border-[#f5e5c5] last:border-b-0">
        <div className="flex items-center space-x-4"><span className="font-bold text-lg text-[#a0522d] w-6 text-center">{rank}.</span><div className="flex items-center space-x-3">{icon}<span className="font-semibold text-[#000080]">{name}</span></div></div>
        <span className="font-bold text-[#000080] flex items-center"><IndianRupee size={16} className="mr-1"/>{amount.toLocaleString('en-IN')}</span>
    </li>
);

const ProgressBar = ({ cause, current, goal, icon: Icon }) => {
    const percentage = Math.min((current / goal) * 100, 100);
    return (
        <div>
            <div className="flex justify-between items-center mb-1">
                <div className="flex items-center"><Icon className="w-5 h-5 mr-2 text-[#a0522d]" /><span className="font-bold text-[#000080]">{cause}</span></div>
                <span className="text-sm font-semibold text-[#a0522d]">₹{current.toLocaleString('en-IN')} / ₹{goal.toLocaleString('en-IN')}</span>
            </div>
            <div className="w-full bg-[#f5e5c5] rounded-full h-4 border border-[#d2b48c]"><div className="bg-[#d2b48c] h-full rounded-full" style={{ width: `${percentage}%` }}></div></div>
        </div>
    );
};

// --- Main App Component ---
export default function App() {
    const [donations, setDonations] = useState(initialDonations);
    const [formData, setFormData] = useState({
        name: '', bitsId: '', role: '', location: '', amount: '',
        region: 'North', department: 'CS', cause: Object.keys(causes)[0], memory: '',
    });
    const [showForm, setShowForm] = useState(true);
    const [errorMessage, setErrorMessage] = useState('');
    const [showSuccess, setShowSuccess] = useState(false);

    const handleInputChange = (e) => {
        setErrorMessage('');
        const { name, value } = e.target;
        setFormData(prev => ({ ...prev, [name]: value }));
    };
    
    const handleTierSelect = (amount) => {
        setFormData(prev => ({ ...prev, amount }));
    };

    const handleSubmit = (e) => {
        e.preventDefault();
        if (!formData.name || !formData.amount || !formData.bitsId) {
            setErrorMessage('Please fill in your Name, BITS ID, and Donation Amount.');
            return;
        }
        const newDonation = { id: donations.length + 1, ...formData, amount: parseInt(formData.amount, 10) || 0 };
        setDonations([newDonation, ...donations]);
        setFormData({ name: '', bitsId: '', role: '', location: '', amount: '', region: 'North', department: 'CS', cause: Object.keys(causes)[0], memory: '' });
        setShowSuccess(true);
        setTimeout(() => setShowSuccess(false), 5000); // Hide success message after 5 seconds
    };

    const topIndividualDonors = useMemo(() => [...donations].sort((a, b) => b.amount - a.amount).slice(0, 5), [donations]);
    const topDonorsByDepartment = useMemo(() => {
        const grouped = donations.reduce((acc, donation) => {
            const { department } = donation;
            if (!acc[department]) acc[department] = [];
            acc[department].push(donation);
            return acc;
        }, {});
        Object.keys(grouped).forEach(department => {
            grouped[department] = grouped[department].sort((a, b) => b.amount - a.amount).slice(0, 5);
        });
        return grouped;
    }, [donations]);
    
    const causeTotals = useMemo(() => {
        return donations.reduce((acc, { cause, amount }) => {
            if (acc[cause]) acc[cause] += amount;
            else acc[cause] = amount;
            return acc;
        }, {});
    }, [donations]);

    const totalRaised = useMemo(() => donations.reduce((sum, d) => sum + d.amount, 0), [donations]);

    return (
        <div className="bg-[#fdf6e3] min-h-screen font-['Lora',_serif] text-[#000080] p-4 sm:p-6 md:p-8" style={{backgroundImage: `url('https://www.transparenttextures.com/patterns/old-wall.png')`}}>
            <style>{`@import url('https://fonts.googleapis.com/css2?family=Lora:wght@400;500;600;700&display=swap');`}</style>
            <div className="max-w-7xl mx-auto">
                <header className="text-center mb-12">
                    <img src="https://upload.wikimedia.org/wikipedia/en/thumb/d/d3/BITS_Pilani-Logo.svg/1200px-BITS_Pilani-Logo.svg.png" alt="BITS Pilani Logo" className="w-24 h-24 mx-auto mb-4 bg-white p-2 rounded-full shadow-lg" />
                    <h1 className="text-4xl md:text-5xl font-bold text-[#000080]">Class of 2000: Silver Jubilee Fund</h1>
                    <p className="text-xl text-[#a0522d] mt-3">25 Years of BITSian Brilliance. Let's Give Back.</p>
                </header>

                <Card className="mb-12">
                    <h2 className="text-2xl font-bold text-center text-[#000080] mb-4">Progress Towards Our Goals</h2>
                    <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                        {Object.entries(causes).map(([name, { goal, icon }]) => (
                            <ProgressBar key={name} cause={name} current={causeTotals[name] || 0} goal={goal} icon={icon} />
                        ))}
                    </div>
                </Card>

                <div className="grid grid-cols-1 lg:grid-cols-3 gap-8">
                    <div className="lg:col-span-2 space-y-8">
                        <Card>
                            <div className="flex justify-between items-center cursor-pointer" onClick={() => setShowForm(!showForm)}>
                                <h2 className="text-2xl font-bold text-[#000080]">✍️ Join the Campaign</h2>
                                <ChevronDown className={`w-6 h-6 text-[#a0522d] transition-transform duration-300 ${showForm ? 'rotate-180' : ''}`} />
                            </div>
                            {showForm && (
                                <form onSubmit={handleSubmit} className="mt-6 space-y-4">
                                    {errorMessage && <p className="text-red-800 bg-red-100 border border-red-300 p-3 rounded-lg text-center">{errorMessage}</p>}
                                    {showSuccess && <p className="text-green-800 bg-green-100 border border-green-300 p-3 rounded-lg text-center">Thank you for your generous donation! Consider sharing the campaign with fellow BITSians.</p>}
                                    <div className="space-y-2">
                                        <label className="text-sm font-semibold text-[#a0522d]">Select Donation Tier</label>
                                        <div className="grid grid-cols-1 sm:grid-cols-3 gap-2">
                                            {donationTiers.map(tier => (
                                                <button type="button" key={tier.name} onClick={() => handleTierSelect(tier.amount)} className={`p-2 border-2 rounded-lg flex items-center justify-center transition-all ${formData.amount === tier.amount ? 'bg-[#d2b48c] text-white border-[#a0522d]' : 'bg-[#f5e5c5] border-[#d2b48c] hover:bg-[#eaddc5]'}`}>
                                                    <tier.icon className="w-5 h-5 mr-2" /> {tier.name}
                                                </button>
                                            ))}
                                        </div>
                                    </div>
                                    <div><label className="text-sm font-semibold text-[#a0522d]">Or Enter Custom Amount (INR)</label><input type="number" name="amount" value={formData.amount} onChange={handleInputChange} className="mt-1 w-full p-2 border border-[#d2b48c] rounded-lg bg-white" /></div>
                                    <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                                        <div><label className="text-sm font-semibold text-[#a0522d]">Full Name</label><input type="text" name="name" value={formData.name} onChange={handleInputChange} className="mt-1 w-full p-2 border border-[#d2b48c] rounded-lg bg-white" /></div>
                                        <div><label className="text-sm font-semibold text-[#a0522d]">BITS ID</label><input type="text" name="bitsId" value={formData.bitsId} onChange={handleInputChange} className="mt-1 w-full p-2 border border-[#d2b48c] rounded-lg bg-white" /></div>
                                    </div>
                                    <div><label className="text-sm font-semibold text-[#a0522d]">Donation Cause</label><select name="cause" value={formData.cause} onChange={handleInputChange} className="mt-1 w-full p-2 border border-[#d2b48c] rounded-lg bg-white"><option disabled>Select a Cause</option>{Object.keys(causes).map(c => <option key={c}>{c}</option>)}</select></div>
                                    <div><label className="text-sm font-semibold text-[#a0522d]">Share a Memory (Optional)</label><textarea name="memory" value={formData.memory} onChange={handleInputChange} className="mt-1 w-full p-2 border border-[#d2b48c] rounded-lg bg-white" rows="3" placeholder="e.g., Late night project sessions at the IPC!"></textarea></div>
                                    <button type="submit" className="w-full mt-4 p-3 bg-[#000080] text-white font-bold rounded-lg hover:bg-[#a0522d] transition-colors">Pledge My Support!</button>
                                </form>
                            )}
                        </Card>

                        <Card>
                            <h2 className="text-2xl font-bold text-[#000080] mb-4">Recent Donations</h2>
                            <div className="max-h-[400px] overflow-y-auto pr-2">
                                <ul className="space-y-4">
                                    {donations.map(d => (
                                        <li key={d.id} className="p-3 border-l-4 border-[#d2b48c] bg-[#fdf6e3]">
                                            <div className="flex justify-between items-start">
                                                <span className="font-bold text-[#000080]">{d.name}</span>
                                                <span className="font-bold text-lg text-[#a0522d]">₹{d.amount.toLocaleString('en-IN')}</span>
                                            </div>
                                            <p className="text-sm text-[#a0522d]">{d.cause}</p>
                                            {d.memory && <p className="mt-2 text-sm text-gray-700 italic border-t border-dashed border-[#d2b48c] pt-2">"{d.memory}"</p>}
                                        </li>
                                    ))}
                                </ul>
                            </div>
                        </Card>
                    </div>

                    <div className="space-y-8">
                        <Card><h2 className="text-xl font-bold text-[#000080] mb-2">🏆 Top 5 Donors (Overall)</h2><ul>{topIndividualDonors.map((donor, i) => (<LeaderboardItem key={donor.id} rank={i + 1} name={donor.name} amount={donor.amount} icon={<Award size={20} className="text-[#d4af37]"/>} />))}</ul></Card>
                        <Card><h2 className="text-xl font-bold text-[#000080] mb-2">🏛️ Departmental Top Donors</h2>
                            {Object.entries(topDonorsByDepartment).map(([department, topDonors]) => (
                                <div key={department} className="mt-4">
                                    <h3 className="font-semibold text-lg text-[#a0522d] mb-2">{department}</h3>
                                    <ul>{topDonors.map((donor, i) => (<LeaderboardItem key={donor.id} rank={i + 1} name={donor.name} amount={donor.amount} icon={<Gift size={20} className="text-pink-600" />} />))}</ul>
                                </div>
                            ))}
                        </Card>
                    </div>
                </div>

                <footer className="text-center mt-16 pt-8 border-t border-[#d2b48c]">
                    <p className="text-sm text-[#a0522d]">Made with ❤️ for the BITS Pilani Class of 2000.</p>
                </footer>
            </div>
        </div>
    );
}
