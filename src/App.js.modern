import React, { useState, useMemo } from 'react';
import { ChevronDown, Gift, IndianRupee, Users, Building, GraduationCap, Globe, Award } from 'lucide-react';

// --- Mock Initial Data ---
const initialDonations = [
    { id: 1, name: 'Ravi Sharma', bitsId: '2000A7PS007P', role: 'VP of Engineering, Google', location: 'Mountain View, USA', amount: 250000, region: 'International', department: 'CS', cause: 'Technology & Labs' },
    { id: 2, name: 'Priya Singh', bitsId: '2000B3A3123P', role: 'Founder, Ather Energy', location: 'Bengaluru, India', amount: 200000, region: 'South', department: 'EEE', cause: 'Student Scholarships' },
    { id: 3, name: 'Amit Patel', bitsId: '2000A1PS234P', role: 'Director of Operations, Tata Motors', location: 'Pune, India', amount: 150000, region: 'West', department: 'Mech', cause: 'Campus Infrastructure' },
    { id: 4, name: 'Sunita Reddy', bitsId: '2000A4PS456P', role: 'Lead Scientist, Dr. Reddy\'s Labs', location: 'Hyderabad, India', amount: 175000, region: 'South', department: 'Chem', cause: 'Faculty Development' },
    { id: 5, name: 'Vikram Kumar', bitsId: '2000A7PS010P', role: 'Principal SDE, Amazon', location: 'Seattle, USA', amount: 225000, region: 'International', department: 'CS', cause: 'Technology & Labs' },
    { id: 6, name: 'Ananya Gupta', bitsId: '2000B2A3567P', role: 'Partner, McKinsey', location: 'Mumbai, India', amount: 180000, region: 'West', department: 'EEE', cause: 'Student Scholarships' },
    { id: 7, name: 'Rajesh Mehta', bitsId: '2000A7PS021P', role: 'Staff Engineer, Meta', location: 'London, UK', amount: 210000, region: 'International', department: 'CS', cause: 'Technology & Labs' },
];

const causes = [
    'Student Scholarships',
    'Campus Infrastructure',
    'Technology & Labs',
    'Faculty Development',
    'Student Life & Activities'
];

// --- Helper Components ---
const Card = ({ children, className = '' }) => (
    <div className={`bg-white rounded-xl shadow-md p-6 ${className}`}>
        {children}
    </div>
);

const LeaderboardItem = ({ rank, name, amount, icon }) => (
    <li className="flex items-center justify-between py-3 border-b border-gray-100 last:border-b-0">
        <div className="flex items-center space-x-4">
            <span className="font-bold text-lg text-gray-400 w-6 text-center">{rank}.</span>
            <div className="flex items-center space-x-3">
               {icon}
               <span className="font-semibold text-gray-700">{name}</span>
            </div>
        </div>
        <span className="font-bold text-indigo-600 flex items-center"><IndianRupee size={16} className="mr-1"/>{amount.toLocaleString('en-IN')}</span>
    </li>
);

// --- Main App Component ---
export default function App() {
    const [donations, setDonations] = useState(initialDonations);
    const [formData, setFormData] = useState({
        name: '', bitsId: '', role: '', location: '', amount: '',
        region: 'North', department: 'CS', cause: causes[0],
    });
    const [showForm, setShowForm] = useState(true);
    const [errorMessage, setErrorMessage] = useState('');

    const handleInputChange = (e) => {
        setErrorMessage('');
        const { name, value } = e.target;
        setFormData(prev => ({ ...prev, [name]: value }));
    };

    const handleSubmit = (e) => {
        e.preventDefault();
        if (!formData.name || !formData.amount || !formData.bitsId) {
            setErrorMessage('Please fill in your Name, BITS ID, and Donation Amount.');
            return;
        }
        const newDonation = {
            id: donations.length + 1,
            ...formData,
            amount: parseInt(formData.amount, 10) || 0,
        };
        setDonations([newDonation, ...donations]);
        setFormData({ name: '', bitsId: '', role: '', location: '', amount: '', region: 'North', department: 'CS', cause: causes[0] });
    };

    const topIndividualDonors = useMemo(() => {
        return [...donations].sort((a, b) => b.amount - a.amount).slice(0, 5);
    }, [donations]);
    
    const regionalLeaderboard = useMemo(() => {
        const regions = donations.reduce((acc, curr) => {
            acc[curr.region] = (acc[curr.region] || 0) + curr.amount;
            return acc;
        }, {});
        return Object.entries(regions).sort((a, b) => b[1] - a[1]);
    }, [donations]);

    const departmentalLeaderboard = useMemo(() => {
        const departments = donations.reduce((acc, curr) => {
            acc[curr.department] = (acc[curr.department] || 0) + curr.amount;
            return acc;
        }, {});
        return Object.entries(departments).sort((a, b) => b[1] - a[1]);
    }, [donations]);
    
    const topDonorsByDepartment = useMemo(() => {
        const grouped = donations.reduce((acc, donation) => {
            const { department } = donation;
            if (!acc[department]) {
                acc[department] = [];
            }
            acc[department].push(donation);
            return acc;
        }, {});

        Object.keys(grouped).forEach(department => {
            grouped[department] = grouped[department]
                .sort((a, b) => b.amount - a.amount)
                .slice(0, 5);
        });
        return grouped;
    }, [donations]);

    const totalRaised = useMemo(() => {
        return donations.reduce((sum, d) => sum + d.amount, 0);
    }, [donations]);

    return (
        <div className="bg-gray-50 min-h-screen font-['Inter',_sans-serif] text-gray-800 p-4 sm:p-6 md:p-8">
            <style>{`@import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700;800&display=swap');`}</style>
            <div className="max-w-7xl mx-auto">
                <header className="text-center mb-12">
                    <img src="https://upload.wikimedia.org/wikipedia/en/thumb/d/d3/BITS_Pilani-Logo.svg/1200px-BITS_Pilani-Logo.svg.png" alt="BITS Pilani Logo" className="w-24 h-24 mx-auto mb-4" />
                    <h1 className="text-4xl md:text-5xl font-extrabold text-gray-900 tracking-tight">Class of 2000: Silver Jubilee Fund</h1>
                    <p className="text-xl text-gray-500 mt-3">25 Years of BITSian Brilliance. Let's Give Back.</p>
                </header>

                <div className="mb-12 p-6 bg-indigo-600 rounded-xl text-white text-center shadow-lg">
                    <h2 className="text-lg font-medium uppercase tracking-wider">Total Raised</h2>
                    <p className="text-5xl font-bold flex items-center justify-center mt-2">
                        <IndianRupee size={40} className="mr-2"/>{totalRaised.toLocaleString('en-IN')}
                    </p>
                </div>

                <div className="grid grid-cols-1 lg:grid-cols-3 gap-8">
                    <div className="lg:col-span-2 space-y-8">
                        <Card>
                            <div className="flex justify-between items-center cursor-pointer" onClick={() => setShowForm(!showForm)}>
                                <h2 className="text-2xl font-bold text-gray-900">✍️ Join the Campaign</h2>
                                <ChevronDown className={`w-6 h-6 text-gray-500 transition-transform duration-300 ${showForm ? 'rotate-180' : ''}`} />
                            </div>
                            {showForm && (
                                <form onSubmit={handleSubmit} className="mt-6 space-y-4">
                                    {errorMessage && <p className="text-red-700 bg-red-100 border border-red-300 p-3 rounded-lg text-center">{errorMessage}</p>}
                                    <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                                        <div><label className="text-sm font-medium text-gray-600">Full Name</label><input type="text" name="name" value={formData.name} onChange={handleInputChange} className="mt-1 w-full p-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500" /></div>
                                        <div><label className="text-sm font-medium text-gray-600">BITS ID</label><input type="text" name="bitsId" value={formData.bitsId} onChange={handleInputChange} className="mt-1 w-full p-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500" /></div>
                                    </div>
                                    <div><label className="text-sm font-medium text-gray-600">Current Role & Company</label><input type="text" name="role" value={formData.role} onChange={handleInputChange} className="mt-1 w-full p-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500" /></div>
                                    <div><label className="text-sm font-medium text-gray-600">Location (City, Country)</label><input type="text" name="location" value={formData.location} onChange={handleInputChange} className="mt-1 w-full p-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500" /></div>
                                    <div><label className="text-sm font-medium text-gray-600">Donation Amount (INR)</label><input type="number" name="amount" value={formData.amount} onChange={handleInputChange} className="mt-1 w-full p-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500" /></div>
                                    <div><label className="text-sm font-medium text-gray-600">Donation Cause</label><select name="cause" value={formData.cause} onChange={handleInputChange} className="mt-1 w-full p-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500"><option disabled>Select a Cause</option>{causes.map(c => <option key={c}>{c}</option>)}</select></div>
                                    <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                                        <div><label className="text-sm font-medium text-gray-600">Allocate to Region</label><select name="region" value={formData.region} onChange={handleInputChange} className="mt-1 w-full p-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500"><option>North</option><option>South</option><option>East</option><option>West</option><option>International</option></select></div>
                                        <div><label className="text-sm font-medium text-gray-600">Allocate to Department</label><select name="department" value={formData.department} onChange={handleInputChange} className="mt-1 w-full p-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500"><option>CS</option><option>EEE</option><option>Mech</option><option>Chem</option><option>Phoenix Core</option></select></div>
                                    </div>
                                    <button type="submit" className="w-full mt-4 p-3 bg-indigo-600 text-white font-bold rounded-lg hover:bg-indigo-700 transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">Pledge My Support!</button>
                                </form>
                            )}
                        </Card>

                        <Card>
                            <h2 className="text-2xl font-bold text-gray-900 mb-4">Recent Donations</h2>
                            <div className="max-h-[400px] overflow-y-auto pr-2">
                                <table className="w-full text-left text-sm">
                                    <thead className="bg-gray-50"><tr className="border-b border-gray-200"><th className="p-2 font-semibold text-gray-600">Name</th><th className="p-2 font-semibold text-gray-600">Amount (INR)</th><th className="p-2 font-semibold text-gray-600">Cause</th></tr></thead>
                                    <tbody className="divide-y divide-gray-100">{donations.map(d => (<tr key={d.id}><td className="p-3">{d.name}</td><td className="p-3 font-medium text-gray-800">{d.amount.toLocaleString('en-IN')}</td><td className="p-3 text-gray-600">{d.cause}</td></tr>))}</tbody>
                                </table>
                            </div>
                        </Card>
                    </div>

                    <div className="space-y-8">
                        <Card><h2 className="text-xl font-bold text-gray-900 mb-2">🏆 Top 5 Donors (Overall)</h2><ul>{topIndividualDonors.map((donor, i) => (<LeaderboardItem key={donor.id} rank={i + 1} name={donor.name} amount={donor.amount} icon={<Award size={20} className="text-amber-500"/>} />))}</ul></Card>
                        <Card><h2 className="text-xl font-bold text-gray-900 mb-2">🌍 Regional Champions</h2><ul>{regionalLeaderboard.map(([region, total], i) => (<LeaderboardItem key={region} rank={i + 1} name={region} amount={total} icon={<Globe size={20} className="text-green-500"/>} />))}</ul></Card>
                        <Card><h2 className="text-xl font-bold text-gray-900 mb-2">🏛️ Department Pride</h2><ul>{departmentalLeaderboard.map(([dept, total], i) => (<LeaderboardItem key={dept} rank={i + 1} name={dept} amount={total} icon={<GraduationCap size={20} className="text-sky-500"/>} />))}</ul></Card>
                    </div>
                </div>

                <div className="mt-12">
                    <h2 className="text-3xl font-bold text-center text-gray-900 mb-8">Departmental Top Donors</h2>
                    <div className="grid grid-cols-1 md:grid-cols-2 gap-8">
                        {Object.entries(topDonorsByDepartment).map(([department, topDonors]) => (
                            <Card key={department}>
                                <h3 className="text-xl font-bold text-gray-900 mb-4 flex items-center">
                                    <Building size={22} className="mr-3 text-indigo-500" />
                                    Top Donors: {department}
                                </h3>
                                <ul>
                                    {topDonors.map((donor, i) => (
                                        <LeaderboardItem key={donor.id} rank={i + 1} name={donor.name} amount={donor.amount} icon={<Gift size={20} className="text-pink-500" />} />
                                    ))}
                                </ul>
                            </Card>
                        ))}
                    </div>
                </div>

                <footer className="text-center mt-16 pt-8 border-t border-gray-200">
                    <p className="text-sm text-gray-500">Made with ❤️ for the BITS Pilani Class of 2000.</p>
                </footer>
            </div>
        </div>
    );
}
